---
- name: Create DigitalOcean Droplet
  hosts: localhost
  gather_facts: no
  vars_files:
      - vars.yaml
  tasks:
      - name: Create a DO Droplet
        community.digitalocean.digital_ocean_droplet:
            state: present
            oauth_token: '{{ do_api_token }}'
            name: 'srv-m-01'
            region: 'fra1'
            size: 's-1vcpu-2gb'
            image: 'ubuntu-23-10-x64'
            vpc_uuid: '{{ vpc }}'
            ssh_keys:
                - '{{ ssh_key }}'
        register: srv

      - name: Wait for port 22 to become open on the host
        wait_for:
            host: '{{ srv.data.droplet.networks.v4[0].ip_address }}'
            port: 22
            state: started
            delay: 10
            sleep: 10
            timeout: 300

      - name: Add new Droplet to inventory
        add_host:
            name: '{{ srv.data.droplet.networks.v4[0].ip_address }}'
            groups: 'all'
            # You can also set variables for the new host here

- name: Run baseline configuration
  hosts: all
  vars_files:
      - vars.yaml
  tasks:
      - name: Wait for cloud-init / user-data to finish
        command: cloud-init status --wait
        changed_when: false

      - name: Update apt package index
        apt:
            update_cache: yes

      - name: Install packages
        apt:
            name: tcpdump, vim, htop, cifs-utils, nala, git, python-is-python3, python3-pip, python3-pymysql, curl, mysql-client, ca-certificates, apt-transport-https, software-properties-common
            state: present
        become: yes
        become_user: root
        become_method: sudo

      - name: bashrc
        template:
            src: ../templates/bashrc.sh
            dest: /root/.bashrc
            owner: root
            group: root
            mode: '0644'

      - name: bashrc-skel
        template:
            src: ../templates/bashrc.sh
            dest: /etc/skel/.bashrc
            owner: root
            group: root
            mode: '0644'

      - name: env file
        template:
            src: ../templates/.env
            dest: /opt/.env
            owner: root
            group: root
            mode: '0644'

      - name: Add Dockerâ€™s official GPG key
        apt_key:
            url: https://download.docker.com/linux/ubuntu/gpg
            state: present

      - name: Add Docker repository
        apt_repository:
            repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
            state: present

      #   - name: Update apt package index
      #     apt:
      #         update_cache: yes

      - name: Install Docker CE
        apt:
            name: docker-ce
            state: present

      - name: Pull mysql Docker image
        docker_image:
            name: mysql
            source: pull
